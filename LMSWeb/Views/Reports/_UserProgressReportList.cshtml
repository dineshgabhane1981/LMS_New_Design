@model List<LMSBL.DBModels.UserProgressReportModel>
<style>
    .row {
        display: flex;
        flex-wrap: wrap;
        margin-right: 0px;
        margin-left: 0px;
    }
</style>
<div class="course-list-container list-box">
    <div class="row">
        <div class="col search-container col-md-3" style="padding-top:20px;">
            <input class="form-control" type="text" id="txtSearch" placeholder="Search Learning by name..." />
        </div>
        <div class="col text-right">
            <ul class="list-inline progress-list mt-2">
                <li class="list-inline-item"><i class="far fa-clock"></i> Not Started</li>
                <li class="list-inline-item"><i class="far fa-hourglass orange-color"></i> In Progress</li>
                <li class="list-inline-item"><i class="far fa-check-circle green-color"></i> Completed</li>
                <li class="list-inline-item">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle create-learning-btn" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-file-export" style="padding-right:5px;"></i> Export
                        </button>
                        <div class="dropdown-menu export-menu" aria-labelledby="dropdownMenuButton">
                            <span class="dropdown-item" style="cursor:pointer;" onclick='ExportDataByDateInExcel();'>
                                Excel
                            </span>
                            <span class="dropdown-item" style="cursor:pointer;" onclick='ExportDataByDateInPDF();'>
                                PDF
                            </span>

                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <div class="content">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title" style="font-weight:bold;">User Progress Report</h4>
                    <p class="card-category"></p>
                </div>
                <div class="row mt-3" id="dvActivityData">
                    <div class="table-responsive">
                        <table class="table" id="activityTable">
                            <thead>
                                <tr>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Sr. No.</th>
                                    <th scope="col" style="font-weight:bold;">Learning</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Type</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Status</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Duration (Mins)</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Time Spent</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Attempts</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Score</th>
                                    <th scope="col" style="font-weight:bold;">Attempted On</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Rating</th>
                                    <th scope="col" style="text-align:center; font-weight:bold;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {

                                    if (Model.Count > 0)
                                    {
                                        int count = 0;
                                        foreach (var user in Model)
                                        {
                                            count++;
                                            var commentNew = user.Comments.Replace("#;;# ", ";").Split(';');
                                            var actualComment = "Commets:\n";
                                            int commentCount = 0;
                                            foreach (var c in commentNew)
                                            {
                                                commentCount++;
                                                actualComment += commentCount + ") " + c + "\n";
                                            }
                                            decimal rating = 0;
                                            var ratingPercentage = string.Empty;
                                            if (!string.IsNullOrEmpty(user.Rating))
                                            {
                                                rating = Convert.ToDecimal(user.Rating) * 20;
                                                ratingPercentage = rating + "%";
                                            }
                                            else
                                            {
                                                ratingPercentage = "0%";
                                            }
                                            decimal score = 0;
                                            if (!string.IsNullOrEmpty(user.Score))
                                            {
                                                if (user.LearningType == "Quiz")
                                                {
                                                    score = Math.Round(((Convert.ToDecimal(user.Score) * 100) / user.QuestionCount), 2);
                                                }
                                                else
                                                {
                                                    score = Convert.ToDecimal(user.Score);
                                                }
                                            }

                                            <tr>
                                                <td style="text-align:center;">@count</td>
                                                <td>@user.LearningName</td>
                                                <td style="text-align:center;">@user.LearningType</td>
                                                @if (user.ActivityStatus == "Completed")
                                                {
                                                    <td style="text-align:center;"><i class="far fa-check-circle green-color"></i></td>
                                                }
                                                @if (user.ActivityStatus == "InProgress")
                                                {
                                                    <td style="text-align:center;"><i class="far fa-hourglass orange-color"></i></td>
                                                }
                                                @if (user.ActivityStatus == "Not Started")
                                                {
                                                    <td style="text-align:center;"><i class="far fa-clock"></i></td>
                                                }

                                                @if (!string.IsNullOrEmpty(user.Duration))
                                                {
                                                    <td style="text-align:center;">@user.Duration:00</td>
                                                }
                                                else
                                                {
                                                    <td style="text-align:center;">-</td>
                                                }

                                                @if (!string.IsNullOrEmpty(user.CompletionTime) && user.CompletionTime != "-")
                                                {
                                                    <td style="text-align:center;">@user.CompletionTime</td>
                                                }
                                                else
                                                {
                                                    <td style="text-align:center;">-</td>
                                                }

                                                <td style="text-align:center;">@user.Attempts</td>
                                                @if (score == 0)
                                                {
                                                    <td style="text-align:center;">-</td>
                                                }
                                                else
                                                {
                                                    <td style="text-align:center;">@score%</td>
                                                }
                                                <td>@user.AttemptedOn</td>
                                                <td>
                                                    <div class="stars-outer">
                                                        <div class="stars-inner" title="@Html.Raw(actualComment)" style="width:@ratingPercentage"></div>
                                                    </div>
                                                </td>
                                                @if (user.LearningType == "Quiz" && user.Attempts != "")
                                                {
                                                    <td style="text-align:center;"><a href="@Url.Action("DetailReport", "Reports", new { activityId = user.ActivityId, UserId= Context.Request.QueryString["UserId"]})" class="login" title="View Detail"> View Progress</a></td>

                                                }
                                                else
                                                {
                                                    <td style="text-align:center;"></td>
                                                }
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="8" align="center">No Activity Available</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8">No Activity Available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#activityTable').DataTable({
            //"aaSorting": [[0, "desc"]],
            "paging": true,
            "ordering": false,
            "info": true,
            "bFilter": true,
            "pageLength": 10,
            "lengthChange": false,
            "pagingType": "simple_numbers",
            aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-1]
                }
            ]
        });

        $('#activityTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) == 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#activityTable').DataTable();
            table.draw();
        });
        $('.dataTables_paginate').css("float", "right");
    });
    function ExportDataByDateInExcel() {
        console.log("enter");
        var params = new URLSearchParams(window.location.search);
        var ActivityId = params.get('ActivityId');
        var UserId = params.get('UserId');
        var type = params.get('Type');
        var fDate = $('#fDate').val();
        var tDate = $('#tDate').val();
        var urlLink = "@Url.Action("ExportToExcel", "Reports")";
        urlLink = urlLink + "?fDate=" + fDate + "&tDate=" + tDate + "&UserId=" + UserId + "&ReportName=User Progress Report";
        console.log(urlLink);
        window.location.href = urlLink;


    }
    function ExportDataByDateInPDF() {
        //console.log("enter");
        var params = new URLSearchParams(window.location.search);
        var ActivityId = params.get('ActivityId');
        var type = params.get('Type');
        var UserId = params.get('UserId');
        var fDate = $('#fDate').val();
        var tDate = $('#tDate').val();
        var urlLink = "@Url.Action("ExportToPdf", "Reports")";
        urlLink = urlLink + "?fDate=" + fDate + "&tDate=" + tDate + "&UserId=" + UserId + "&ReportName=User Progress Report";
        console.log(urlLink);
        window.location.href = urlLink;


    }

</script>
<style>
    table.dataTable thead .sorting_asc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_asc.png") no-repeat center left;
    }

    table.dataTable thead .sorting_desc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_desc.png") no-repeat center left;
    }

    table.dataTable thead .sorting {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_both.png") no-repeat center left;
    }
</style>
